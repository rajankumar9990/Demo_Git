package com.healthcare.utils;

import io.github.bonigarcia.wdm.WebDriverManager;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxOptions;s
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.edge.EdgeOptions;

import java.time.Duration;

public class DriverFactory {

    private static final ThreadLocal<WebDriver> TL_DRIVER = new ThreadLocal<>();

    private DriverFactory() {
        // private constructor to prevent instantiation
    }

    public static WebDriver getDriver() {
        return TL_DRIVER.get();
    }

    public static void initDriver(String browser) {
        WebDriver driver;

        switch (browser.toLowerCase()) {
            case "firefox":
                WebDriverManager.firefoxdriver().setup();
                FirefoxOptions fo = new FirefoxOptions();
                driver = new FirefoxDriver(fo);
                break;

            case "edge":
                WebDriverManager.edgedriver().setup();
                EdgeOptions eo = new EdgeOptions();
                driver = new EdgeDriver(eo);
                break;

            case "chrome":
            default:
                WebDriverManager.chromedriver().setup();
                ChromeOptions co = new ChromeOptions();
                // Fix for Chrome v111+ remote connection issues
                co.addArguments("--remote-allow-origins=*");
                driver = new ChromeDriver(co);
                break;
        }

        driver.manage().window().maximize();
        // configurable implicit wait, default 10s
        int iw = ConfigReader.getInt("implicitWait", 10);
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(iw));

        TL_DRIVER.set(driver);
    }

    public static void quitDriver() {
        WebDriver driver = TL_DRIVER.get();
        if (driver != null) {
            driver.quit();
            TL_DRIVER.remove();
        }
    }
}
